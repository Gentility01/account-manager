# Generated by Django 4.2.11 on 2024-05-28 13:41

import auto_prefetch
import ckeditor_uploader.fields
import cloudinary.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Address',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=100)),
                ('paid_status', models.BooleanField(default=False)),
                ('product_status', models.CharField(choices=[('PROCESSING', 'PROCESSING'), ('SHIPPED', 'SHIPPED'), ('DELIVERD', 'DELIVERD')], default='PROCESSING', max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Cart Orders',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CartOrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=200)),
                ('quantity', models.IntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, max_digits=100)),
                ('total', models.DecimalField(decimal_places=2, max_digits=100)),
                ('invoice_no', models.CharField(blank=True, default='', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Cart Order Items',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
                ('slug', models.SlugField(blank=True, default='')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(default='', null=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100)),
                ('oldprice', models.DecimalField(decimal_places=2, max_digits=100)),
                ('spacification', ckeditor_uploader.fields.RichTextUploadingField(default='', null=True, verbose_name='specification')),
                ('product_status', models.CharField(choices=[('DRAFT', 'DRAFT'), ('DISABLED', 'DISABLED'), ('IN_REVIEW', 'IN_REVIEW'), ('REJECTED', 'REJECTED'), ('PUBLISHED', 'PUBLISHED')], default='IN_REVIEW', max_length=10)),
                ('in_stock', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('digital', models.BooleanField(default=True)),
                ('best_seller', models.BooleanField(default=False)),
                ('special_offer', models.BooleanField(default=False)),
                ('just_arrived', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Products',
                'permissions': [('can_crud_product', 'Can create, update, and delete product')],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, verbose_name='image')),
            ],
            options={
                'verbose_name_plural': 'Product images',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('review', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '⭐'), (2, '⭐⭐'), (3, '⭐⭐⭐'), (4, '⭐⭐⭐⭐'), (5, '⭐⭐⭐⭐⭐')], default=3)),
            ],
            options={
                'verbose_name_plural': 'Product Reviews',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
            ],
            options={
                'ordering': ['title', 'created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.product', verbose_name='Product Wishlist')),
            ],
            options={
                'verbose_name_plural': 'Wishlists',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
