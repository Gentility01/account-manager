# Generated by Django 4.2.11 on 2024-05-06 05:59

import auto_prefetch
import core.applications.users.managers
import core.utils.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name of User')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', core.applications.users.managers.UserManager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('owner', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_accounts', to=settings.AUTH_USER_MODEL, verbose_name='Account Owner')),
            ],
            options={
                'verbose_name_plural': 'Accounts',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MarketingAndSales',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('marketing_strategy', models.TextField(verbose_name='Marketing Strategy')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Marketing and Sales',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LiveChatSupport',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('languages_spoken', models.CharField(max_length=100, verbose_name='Languages Spoken')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Live Chat Supports',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='HelpDeskTechnicalSupport',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('technical_skills', models.TextField(verbose_name='Technical Skills')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Help Desk Technical Supports',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DigitalGoodsDistribution',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('delivery_method', models.CharField(max_length=50, verbose_name='Delivery Method')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Digital Goods Distributions',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerSupportRepresentative',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('department', models.CharField(max_length=100, verbose_name='Department')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Customer Support Representatives',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ContentManager',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('expertise_area', models.CharField(max_length=255, verbose_name='Expertise Area')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Content Managers',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='AffiliatePartner',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('affiliate_code', models.CharField(max_length=20, verbose_name='Affiliate Code')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Affiliate Partners',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('department', models.CharField(max_length=100, verbose_name='Department')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Administrators',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Accountant',
            fields=[
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(default=core.utils.models.generate_uuid, editable=False, max_length=120, primary_key=True, serialize=False, unique=True)),
                ('financial_software_used', models.CharField(max_length=100, verbose_name='Financial Software Used')),
                ('account', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to='users.account', verbose_name='Account')),
                ('user', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Accountants',
                'ordering': ['-created_at'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
