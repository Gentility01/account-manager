# Generated by Django 4.2.11 on 2024-05-26 17:33

import auto_prefetch
import ckeditor_uploader.fields
import core.utils.media
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django_resized.forms
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ecommerce', '0002_remove_product_tags_alter_productreview_rating_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, default='', max_length=50)),
                ('slug', models.SlugField(blank=True, default='')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=-1, scale=None, size=[1920, 1080], upload_to=core.utils.media.MediaHelper.get_image_upload_path)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='', null=True, verbose_name='Description')),
                ('category', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.category', verbose_name='Category')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', auto_prefetch.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User Post')),
            ],
            options={
                'verbose_name_plural': 'Posts',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
